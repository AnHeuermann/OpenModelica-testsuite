// name:     testADOLC11
// keywords: adolc derivatives
// status: erroneous
// teardown_command: rm -rf case1* output.log
//
// Testing adolc jacobian driver for a non-linear loop
//

loadString("
  model case11
    Real w,x,y;
    Real z;
    parameter Real p[3] = {5.0, 105, 5.0};
  equation
   /*
    w+x*y = 2;
    ((p[1] + p[2]*y)*x) * z*w = p[3]*time;
    x-y = p[2];
    */
    w+x*y = 2;
    x + y = p[3]-1;
    x * y = -p[2]+w*z;

    der(z) = w;
  end case11;
");
getErrorString();

setCommandLineOptions("--adolcTrace");
getErrorString();

simulate(case11, simflags="-jacobian=adolc -lv LOG_JAC_TEST");
getErrorString();

val(z, 0.0);
val(z, 1.0);

simulate(case11, simflags="-jacobian=adolcSparse -lv LOG_JAC_TEST");
getErrorString();

val(z, 0.0);
val(z, 1.0);

// Result:
// true
// ""
// true
// ""
// record SimulationResult
//     resultFile = "",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'case11', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-jacobian=adolc -lv LOG_JAC_TEST'",
//     messages = "Simulation execution failed for model: case11
// ADOL-C info: creating main trace tag(0), filename = case11_nls_0_1_aat.txt
// ADOL-C Warning: reading ascii trace creates no taylor stack
// Remember to run forward mode with correct setup first.
// ADOL-C info: creating main trace tag(1), filename = case11_nls_0_2_aat.txt
// ADOL-C Warning: reading ascii trace creates no taylor stack
// Remember to run forward mode with correct setup first.
// ADOL-C info: creating main trace tag(2), filename = case11_nls_0_3_aat.txt
// ADOL-C Warning: reading ascii trace creates no taylor stack
// Remember to run forward mode with correct setup first.
// ADOL-C info: creating main trace tag(3), filename = case11_aat.txt
// ADOL-C Warning: reading ascii trace creates no taylor stack
// Remember to run forward mode with correct setup first.
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// malloc(): memory corruption
// Aborted (core dumped)
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// Warning: There are iteration variables with default zero start attribute. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// "
//
//
// record SimulationResult
//     resultFile = "",
//     simulationOptions = "startTime = 0.0, stopTime = 1.0, numberOfIntervals = 500, tolerance = 1e-06, method = 'dassl', fileNamePrefix = 'case11', options = '', outputFormat = 'mat', variableFilter = '.*', cflags = '', simflags = '-jacobian=adolcSparse -lv LOG_JAC_TEST'",
//     messages = "Simulation execution failed for model: case11
// rows: 1 cols: 1 maxColors: 1
// ADOL-C info: creating main trace tag(0), filename = case11_nls_0_1_aat.txt
// ADOL-C Warning: reading ascii trace creates no taylor stack
// Remember to run forward mode with correct setup first.
// ADOL-C info: creating main trace tag(1), filename = case11_nls_0_2_aat.txt
// ADOL-C Warning: reading ascii trace creates no taylor stack
// Remember to run forward mode with correct setup first.
// ADOL-C info: creating main trace tag(2), filename = case11_nls_0_3_aat.txt
// ADOL-C Warning: reading ascii trace creates no taylor stack
// Remember to run forward mode with correct setup first.
// ADOL-C info: creating main trace tag(3), filename = case11_aat.txt
// ADOL-C Warning: reading ascii trace creates no taylor stack
// Remember to run forward mode with correct setup first.
// LOG_SUCCESS       | info    | The initialization finished successfully without homotopy method.
// malloc(): memory corruption
// Aborted (core dumped)
// "
// end SimulationResult;
// "Warning: The initial conditions are not fully specified. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// Warning: There are iteration variables with default zero start attribute. For more information set -d=initialization. In OMEdit Tools->Options->Simulation->OMCFlags, in OMNotebook call setCommandLineOptions("-d=initialization").
// "
//
//
// endResult
